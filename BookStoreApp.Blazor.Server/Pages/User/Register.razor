@page "/users/register"
@using Microsoft.AspNetCore.Components
@using BookStoreApp.Blazor.Server.UI.ApiServices.Base
@inject IClient _httpClient
@inject NavigationManager _NavManager
<h3> user register </h3>

@if (string.IsNullOrEmpty(message) == false)
{
    <div class="alert alert-danger">
        <p>@message</p>
    </div>
}
<div class="card-body">
    <EditForm Model="registerationModel" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText Id="email" class="form-control" @bind-Value="registerationModel.Email" />
            <ValidationMessage For="@(() => registerationModel.Email)" />
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <InputText Id="password" type="password" class="form-control" @bind-Value="registerationModel.Password" />
            <ValidationMessage For="@(() => registerationModel.Password)" />
        </div>
@*        <div class="form-group">
            <label for="confirmpassword">Confirm Password</label>
            <InputText Id="confirmpassword" type="password" class="form-control" @bind-Value="registerationModel.ConfirmPassword" />
            <ValidationMessage For="@(() => registerationModel.ConfirmPassword)" />
        </div>*@
        <button type="submit" class="btn btn-primary btn-block">Register</button>

    </EditForm>
</div>

@code {
    
    UserRegisterDTO registerationModel = new UserRegisterDTO();
    string message = String.Empty; 
    private async Task HandleRegistration()
    {
        registerationModel.Role = "User";
        try
        {
            await _httpClient.RegisterAsync(registerationModel);
            _NavManager.NavigateTo("users/login");
        }
        catch (ApiException ex)
        {
            message = ex.Message;
        }

    }
}


